// @ts-nocheck
/**
 * Scripts
 * Inject client-side code onto a BigCommere storefront. To learn more about scripts, see [Scripts API](/api-docs/store-management/scripts).   ## OAuth Scopes | UI Name                                      | Permission | Parameter                                     | |----------------------------------------------|------------|-----------------------------------------------| | Checkout Content1                             | modify     | `store_content_checkout`                      | | Checkout Content1                             | read-only  | `store_content_checkout_read_only`            | | Content                                       | modify     | `store_v2_content`                            | | Content                                       | read-only  | `store_v2_content_read_only`                  |  1. `Checkout Content` scopes are required to create or read scripts on the checkout page.  For more information on OAuth Scopes, see [Authentication](/api-docs/getting-started/authentication/rest-api-authentication#oauth-scopes).  ## Authentication  Requests can be authenticated by sending an`access_token` via `X-Auth-Token` HTTP header:  ```http host: api.bigcommerce.com Accept: application/json X-Auth-Token: {access_token} ```  |Header|Parameter|Description| |-|-|-| |`X-Auth-Token`|`access_token`|Obtained by creating an API account or installing an app in a BigCommerce control panel.|  For more information on Authenticating BigCommerce APIs, see [Authentication](/api-docs/getting-started/authentication).  ## Available Endpoints | Resource / Endpoint                     | Description                                                             | |-----------------------------------------|-------------------------------------------------------------------------| | Scripts                                 | Add client-side code to a store                                         |
 *
 * OpenAPI spec version: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class ScriptPost {
    /**
    * The user-friendly name.
    */
    'name': string;
    /**
    * The user-friendly description.
    */
    'description'?: string;
    /**
    * An html string containing exactly one `script` tag. Only present if `kind` is `script_tag`.
    */
    'html'?: string;
    /**
    * The `src` attribute of the script to load. Only present if `kind` is `src`.
    */
    'src'?: string;
    /**
    * It will enable automatic cleanup of the script when the single click app is uninstalled or OAuth token is revoked.
    */
    'auto_uninstall'?: boolean;
    /**
    * The load method to use for the script. Values are `default`, `async`, or `defer`. It determines how the script should be loaded into the page.
    */
    'load_method'?: ScriptPostLoadMethodEnum;
    /**
    * Where on the page to place the script. Values are `head` or `footer`.
    */
    'location'?: ScriptPostLocationEnum;
    /**
    * Which set of pages the script should load on.   Please note that you need to have `Checkout content` scope to use `all_pages` and `checkout`.  - The current visibility options are `storefront`, `checkout`, `all_pages` and `order_confirmation`.       `storefront`: All pages that are not `checkout` or `order_confirmation`.      For a list of all locations visit [Scripts Visibility](/api-docs/store-management/scripts#script-visibility-locations).
    */
    'visibility'?: ScriptPostVisibilityEnum;
    /**
    * What type of script this is.  `src` - a `script` tag will be generated with its `src` attribute set to the value of `src`; For scripts that use the src url. By providing a path to the script, we can optimize and serve the script tag automatically for you.  `script_tag` - The value of `html` will be injected directly onto the page. For scripts which include a raw HTML script_tag to be inserted into the page. The load_method must be default.
    */
    'kind'?: ScriptPostKindEnum;
    /**
    * The client id of the API user that created this script, or blank if created by other means.
    */
    'api_client_id'?: string;
    /**
    * Consent category for GDPR and CCPA compliance. Defaults to `uknown` when not specified. Scripts with an `uknown` consent category do not display on stores with customer cookie consent banners enabled. 
    */
    'consent_category'?: ScriptPostConsentCategoryEnum;
    /**
    * Whether the script is enabled or disabled on the storefront.
    */
    'enabled'?: boolean;
    'channel_id'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "html",
            "baseName": "html",
            "type": "string",
            "format": ""
        },
        {
            "name": "src",
            "baseName": "src",
            "type": "string",
            "format": ""
        },
        {
            "name": "auto_uninstall",
            "baseName": "auto_uninstall",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "load_method",
            "baseName": "load_method",
            "type": "ScriptPostLoadMethodEnum",
            "format": ""
        },
        {
            "name": "location",
            "baseName": "location",
            "type": "ScriptPostLocationEnum",
            "format": ""
        },
        {
            "name": "visibility",
            "baseName": "visibility",
            "type": "ScriptPostVisibilityEnum",
            "format": ""
        },
        {
            "name": "kind",
            "baseName": "kind",
            "type": "ScriptPostKindEnum",
            "format": ""
        },
        {
            "name": "api_client_id",
            "baseName": "api_client_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "consent_category",
            "baseName": "consent_category",
            "type": "ScriptPostConsentCategoryEnum",
            "format": ""
        },
        {
            "name": "enabled",
            "baseName": "enabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "channel_id",
            "baseName": "channel_id",
            "type": "number",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ScriptPost.attributeTypeMap;
    }

    public constructor() {
    }
}


export type ScriptPostLoadMethodEnum = "default" | "async" | "defer" ;
export type ScriptPostLocationEnum = "head" | "footer" ;
export type ScriptPostVisibilityEnum = "storefront" | "all_pages" | "checkout" | "order_confirmation" ;
export type ScriptPostKindEnum = "src" | "script_tag" ;
export type ScriptPostConsentCategoryEnum = "essential" | "functional" | "analytics" | "targeting" ;

